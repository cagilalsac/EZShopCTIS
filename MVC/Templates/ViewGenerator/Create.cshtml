@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@{
    var viewModel = "@model " + Model.ViewDataTypeName.Split('.')[Model.ViewDataTypeName.Split('.').Length - 1] + "Model";
    var viewDataTypeName = Model.ViewDataTypeName.Split('.')[Model.ViewDataTypeName.Split('.').Length - 1];
    bool dateTimePickerFound = false;
}
@viewModel

@@* Generated from Custom Template. *@@
@@* Model namespace using directive should be added to _ViewImports.cshtml. *@@

@{
@:@@{
    @:var containerDivClass = "container";
    @:var dateTimePickerClass = "datetimepicker";
@:}
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@viewDataTypeName Create";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<div class="@@containerDivClass">
    @:<h1>@@ViewData["Title"]</h1>
    @:<hr />
@:</div>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@viewDataTypeName Create</title>
@:</head>
@:<body>
    }
@:<div class="@@containerDivClass">
    @:@@if (TempData["Message"] is not null)
    @:{
    @:<p class="text-danger">
        @:@@TempData["Message"]
    @:</p>
    @:}
    @:<form asp-action="@Model.ViewName" autocomplete="off">
		@:@@Html.AntiForgeryToken()
        @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
foreach (var property in Model.ModelMetadata.Properties)
{
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
    {
        if (property.IsForeignKey)
        {
        @:<div class="row mb-3">
            @:<label asp-for="@(property.PropertyName.Remove(property.PropertyName.Length - 2))" class="col-2 col-form-label fw-bold"></label>
			@:<div class="col-10">
				@:<select asp-for="Record.@property.PropertyName" class="form-select" asp-items="ViewBag.@property.PropertyName">
					@:<option value="">-- Select --</option>
				@:</select>
				@:<span asp-validation-for="Record.@property.PropertyName" class="text-danger"></span>
			@:</div>
        @:</div>
            continue;
        }
        if (property.TypeName.Equals(typeof(bool).FullName) || property.TypeName.Equals(typeof(bool?).FullName))
        {
        @:<div class="row mb-3">
			@:<label asp-for="@property.PropertyName" class="col-2 col-form-label fw-bold"></label>
			@:<div class="col-10 pt-2">
				@:<input class="form-check-input" asp-for="Record.@property.PropertyName" />
            @:</div>
        @:</div>
        }
        else if (property.IsEnum && !property.IsEnumFlags)
        {
        @:<div class="row mb-3">
            @:<label asp-for="@property.PropertyName" class="col-2 col-form-label fw-bold"></label>
			@:<div class="col-10">
				@:<select asp-for="Record.@property.PropertyName" class="form-select">
					@:<option value="@@((int)Enum.Value1)">@@Enum.Value1</option>
					@:<option value="@@((int)Enum.Value2)">@@Enum.Value2</option>
				@:</select>
				@:<span asp-validation-for="Record.@property.PropertyName" class="text-danger"></span>
			@:</div>
        @:</div>
        }
        else if (property.TypeName.Equals(typeof(DateTime).FullName) || property.TypeName.Equals(typeof(DateTime?).FullName))
        {
            dateTimePickerFound = true;
        @:<div class="row mb-3">
            @:<label asp-for="@property.PropertyName" class="col-2 col-form-label fw-bold"></label>
			@:<div class="col-10">
				@:<input asp-for="Record.@property.PropertyName" class="form-control @@dateTimePickerClass" type="text" />
				@:<span asp-validation-for="Record.@property.PropertyName" class="text-danger"></span>
			@:</div>
        @:</div>
        }
        else
        {
        @:<div class="row mb-3">
            @:<label asp-for="@property.PropertyName" class="col-2 col-form-label fw-bold"></label>
			@:<div class="col-10">
			    @:<input asp-for="Record.@property.PropertyName" class="form-control" />
				@:<span asp-validation-for="Record.@property.PropertyName" class="text-danger"></span>
			@:</div>
        @:</div>
        }
    }
}
@:
@:@@* Can be uncommented and used for many to many relationships. ManyToManyRecord may be replaced with the related entiy name in the controller and views. *@@
        @:@@*
        @:<div class="row mb-3">
            @:<label asp-for="ManyToManyRecordIds" class="col-2 col-form-label fw-bold"></label>
	        @:<div class="col-10">
		        @:<select multiple asp-for="ManyToManyRecordIds" class="form-select" asp-items="ViewBag.ManyToManyRecordIds"></select>
		        @:<span asp-validation-for="ManyToManyRecordIds" class="text-danger"></span>
	        @:</div>
        @:</div>
        @:*@@
@:
}
        <hr />  
        <div class="row mb-3">
			<div class="offset-2 col-10">
                <button type="submit" class="btn btn-primary">Save</button>
				&nbsp;&nbsp;
                <button type="reset" class="btn btn-outline-primary">Reset</button>
				&nbsp;&nbsp;
				<a asp-action="Index">Back to List</a>
			</div>
        </div>
    </form>
</div>  
@{
if (Model.ReferenceScriptLibraries || dateTimePickerFound)
{
@:
@:@@section Scripts {
if (Model.ReferenceScriptLibraries)
{
    @:<partial name="_ValidationScriptsPartial" />
}
if (dateTimePickerFound)
{
    @:<partial name="_DateTimePicker" />
}
@:}
}
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}